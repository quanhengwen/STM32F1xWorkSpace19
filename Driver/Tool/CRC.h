#ifndef __CRC_H
#define __CRC_H












unsigned short CRC16_CCITT(unsigned char *puchMsg, unsigned int usDataLen);				//多项式x16+x12+x5+1（0x1021），初始值0x0000，低位在前，高位在后，结果与0x0000异或
unsigned short CRC16_CCITT_FALSE(unsigned char *puchMsg, unsigned int usDataLen);	//多项式x16+x12+x5+1（0x1021），初始值0xFFFF，低位在后，高位在前，结果与0x0000异或
unsigned short CRC16_XMODEM(unsigned char *puchMsg, unsigned int usDataLen);				//多项式x16+x12+x5+1（0x1021），初始值0x0000，低位在后，高位在前，结果与0x0000异或
unsigned short CRC16_X25(unsigned char *puchMsg, unsigned int usDataLen);					//多项式x16+x12+x5+1（0x1021），初始值0x0000，低位在前，高位在后，结果与0xFFFF异或
unsigned short CRC16_MODBUS(unsigned char *puchMsg, unsigned int usDataLen);				//多项式x16+x15+x5+1（0x8005），初始值0xFFFF，低位在前，高位在后，结果与0x0000异或
unsigned short CRC16_IBM(unsigned char *puchMsg, unsigned int usDataLen);					//多项式x16+x15+x5+1（0x8005），初始值0x0000，低位在前，高位在后，结果与0x0000异或
unsigned short CRC16_MAXIM(unsigned char *puchMsg, unsigned int usDataLen);				//多项式x16+x15+x5+1（0x8005），初始值0x0000，低位在前，高位在后，结果与0xFFFF异或
unsigned short CRC16_USB(unsigned char *puchMsg, unsigned int usDataLen);					//多项式x16+x15+x5+1（0x8005），初始值0xFFFF，低位在前，高位在后，结果与0xFFFF异或


unsigned char CRC8_8541_msb(unsigned char *puchMsg, unsigned int usDataLen);			//CRC8_8541_msb 高位在前
unsigned char CRC8_8541_lsb(unsigned char *puchMsg, unsigned int usDataLen);			//CRC8_8541_lsb低位在前
#endif


